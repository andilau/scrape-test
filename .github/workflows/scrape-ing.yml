name: Scrape ING Bearbeitungszeiten
on:
  push:
  workflow_dispatch:
  schedule:
    - cron:  '1 * * * *' # every twenty minutes

permissions:
  contents: write

jobs:
  scrape:
    runs-on: ubuntu-latest
    outputs:
      bearbeitungszeiten_date: ${{ steps.parse.outputs.ing_date }}
      bearbeitungszeiten_values: ${{ steps.parse.outputs.ing_values }}

    steps:
    - name: Setup htmlq
      uses: remarkablemark/setup-htmlq@v2
        
    - name: Curl and Parse Bearbeitungszeiten
      id: parse
      run: |-
        RESPONSE=$(curl --silent https://www.ing.de/partner/news/)
        ING_DATE=$(echo "$RESPONSE" | htmlq --text '#Bearbeitungszeiten .rich-content__subheadline' | awk -F' +' '{print $2}') 
        ING_VALUES=$(echo "$RESPONSE" | htmlq --text '#Bearbeitungszeiten table td:nth-child(3)' | awk 1 ORS=';')
        echo "ing_date=$ING_DATE" >> $GITHUB_OUTPUT
        echo "ing_values=$ING_VALUES" >> $GITHUB_OUTPUT

        
  pull-request:
    name: Create Pull Request (mtp)
    needs: scrape
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        ref: main

    - name: Store CSV
      run: echo "${{ needs.scrape.outputs.bearbeitungszeiten_date }};${{ needs.scrape.outputs.bearbeitungszeiten_values }}" > ing_bearbeitungszeiten.csv

    - name: Set git identity
      run: |-
        git config user.name "github-actions"
        git config user.email "github-actions@github.com"

    - name: Commit and push if the data has changed
      run: |-
        git add -A
        timestamp=$(date -u)
        git commit -m "Latest data: ${timestamp}" || exit 0
        git push
